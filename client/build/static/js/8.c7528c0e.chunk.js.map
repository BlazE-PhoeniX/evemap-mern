{"version":3,"sources":["components/signup/Form.js","pages/Signup.js"],"names":["Form","props","history","useHistory","useState","formError","setFormError","dispatchRedux","useDispatch","name","useInput","validate","value","trim","email","test","password","length","confirmPassword","bind","formSubmitHandler","e","a","preventDefault","touchAll","validateAll","message","creds","signupUser","onSubmit","noValidate","className","Input","label","input","id","type","placeholder","onChange","onBlur","invalid","inputIsInvalid","errorMsg","autoComplete","Signup"],"mappings":"8LAiHeA,EA1GF,SAAAC,GACX,IAAMC,EAAUC,cADI,EAEcC,mBAAS,MAFvB,mBAEbC,EAFa,KAEFC,EAFE,KAGdC,EAAgBC,cAEhBC,EAAOC,YAAS,CAAEC,SAAU,SAAAC,GAAK,MAAqB,KAAjBA,EAAMC,UAC3CC,EAAQJ,YAAS,CACrBC,SAAU,SAAAC,GAAK,MAAI,oCAAoCG,KAAKH,MAExDI,EAAWN,YAAS,CAAEC,SAAU,SAAAC,GAAK,OAAIA,EAAMC,OAAOI,QAAU,KAChEC,EAAkBR,YAAS,CAC/BC,SAAW,SAACK,EAAUJ,GAAX,MACC,KAAVA,GAAgBA,IAAUI,EAASJ,OAAOO,KAAK,KAAMH,KAGnDI,EAAiB,uCAAG,WAAMC,GAAN,eAAAC,EAAA,yDACxBD,EAAEE,iBACFjB,EAAa,MACbkB,YAASf,EAAMK,EAAOE,EAAUE,GAE3BO,YAAYhB,EAAMK,EAAOE,EAAUE,GALhB,uBAMtBZ,EAAa,CAAEoB,QAAS,uCANF,0BAUlBC,EAAQ,CACZlB,OACAK,QACAE,WACAE,mBAGFX,EAAcqB,YAAWD,EAAOzB,IAjBR,2CAAH,sDAoBvB,OACE,uBAAM2B,SAAUT,EAAmBU,YAAU,EAACC,UAAU,oBAAxD,UACG1B,GAAa,mBAAG0B,UAAU,aAAb,SAA2B1B,EAAUqB,UACnD,cAACM,EAAA,EAAD,CACEC,MAAM,OACNC,MAAO,CACLH,UAAW,cACXI,GAAI,OACJC,KAAM,OACNC,YAAa,YACbzB,MAAOH,EAAKG,MACZ0B,SAAU7B,EAAK6B,SACfC,OAAQ9B,EAAK8B,QAEfC,QAAS/B,EAAKgC,eACdC,SAAS,qCAEX,cAACV,EAAA,EAAD,CACED,UAAU,WACVE,MAAM,gBACNC,MAAO,CACLH,UAAW,cACXI,GAAI,QACJC,KAAM,QACNC,YAAa,kBACbzB,MAAOE,EAAMF,MACb0B,SAAUxB,EAAMwB,SAChBC,OAAQzB,EAAMyB,QAEhBC,QAAS1B,EAAM2B,eACfC,SAAS,gCAEX,cAACV,EAAA,EAAD,CACED,UAAU,WACVE,MAAM,WACNC,MAAO,CACLH,UAAW,cACXI,GAAI,WACJC,KAAM,WACNC,YAAa,mDACbzB,MAAOI,EAASJ,MAChB0B,SAAUtB,EAASsB,SACnBC,OAAQvB,EAASuB,OACjBI,aAAc,OAEhBH,QAASxB,EAASyB,eAClBC,SAAS,+CAEX,cAACV,EAAA,EAAD,CACED,UAAU,WACVE,MAAM,mBACNC,MAAO,CACLH,UAAW,cACXI,GAAI,mBACJC,KAAM,WACNC,YAAa,mDACbzB,MAAOM,EAAgBN,MACvB0B,SAAUpB,EAAgBoB,SAC1BC,OAAQrB,EAAgBqB,OACxBI,aAAc,OAEhBH,QAAStB,EAAgBuB,eACzBC,SAAS,4CAEX,qBAAKX,UAAU,cAAf,SACE,wBAAQA,UAAU,iBAAlB,2BC9FOa,UAXA,SAAA3C,GACb,OACE,sBAAM8B,UAAU,OAAhB,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,6BAAd,4BACA,cAAC,EAAD","file":"static/js/8.c7528c0e.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { signupUser } from \"../../store/auth\";\nimport useInput, { touchAll, validateAll } from \"../../hooks/use-input\";\nimport Input from \"../ui/Input\";\n\nconst Form = props => {\n  const history = useHistory();\n  const [formError, setFormError] = useState(null);\n  const dispatchRedux = useDispatch();\n\n  const name = useInput({ validate: value => value.trim() !== \"\" });\n  const email = useInput({\n    validate: value => /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/.test(value),\n  });\n  const password = useInput({ validate: value => value.trim().length >= 8 });\n  const confirmPassword = useInput({\n    validate: ((password, value) =>\n      value !== \"\" && value === password.value).bind(null, password),\n  });\n\n  const formSubmitHandler = async e => {\n    e.preventDefault();\n    setFormError(null);\n    touchAll(name, email, password, confirmPassword);\n\n    if (!validateAll(name, email, password, confirmPassword)) {\n      setFormError({ message: \"Provide valid details to continue.\" });\n      return;\n    }\n\n    const creds = {\n      name,\n      email,\n      password,\n      confirmPassword,\n    };\n\n    dispatchRedux(signupUser(creds, history));\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler} noValidate className=\"form form--signup\">\n      {formError && <p className=\"form-error\">{formError.message}</p>}\n      <Input\n        label=\"Name\"\n        input={{\n          className: \"form__input\",\n          id: \"name\",\n          type: \"text\",\n          placeholder: \"Your Name\",\n          value: name.value,\n          onChange: name.onChange,\n          onBlur: name.onBlur,\n        }}\n        invalid={name.inputIsInvalid}\n        errorMsg=\"Name must not be an empty string\"\n      />\n      <Input\n        className=\"ma-bt-md\"\n        label=\"Email address\"\n        input={{\n          className: \"form__input\",\n          id: \"email\",\n          type: \"email\",\n          placeholder: \"you@example.com\",\n          value: email.value,\n          onChange: email.onChange,\n          onBlur: email.onBlur,\n        }}\n        invalid={email.inputIsInvalid}\n        errorMsg=\"Provide valid email address\"\n      />\n      <Input\n        className=\"ma-bt-md\"\n        label=\"Password\"\n        input={{\n          className: \"form__input\",\n          id: \"password\",\n          type: \"password\",\n          placeholder: \"••••••••\",\n          value: password.value,\n          onChange: password.onChange,\n          onBlur: password.onBlur,\n          autoComplete: \"off\",\n        }}\n        invalid={password.inputIsInvalid}\n        errorMsg=\"Password must be greater than 7 characters\"\n      />\n      <Input\n        className=\"ma-bt-md\"\n        label=\"Confirm Password\"\n        input={{\n          className: \"form__input\",\n          id: \"password-confirm\",\n          type: \"password\",\n          placeholder: \"••••••••\",\n          value: confirmPassword.value,\n          onChange: confirmPassword.onChange,\n          onBlur: confirmPassword.onBlur,\n          autoComplete: \"off\",\n        }}\n        invalid={confirmPassword.inputIsInvalid}\n        errorMsg=\"Confirm password doesn't match password\"\n      />\n      <div className=\"form__group\">\n        <button className=\"btn btn--green\">Sign up</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import Form from \"../components/signup/Form\";\n\nconst Signup = props => {\n  return (\n    <main className=\"main\">\n      <div className=\"login-form\">\n        <h2 className=\"heading-secondary ma-bt-lg\">create account</h2>\n        <Form />\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n"],"sourceRoot":""}