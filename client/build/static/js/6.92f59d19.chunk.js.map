{"version":3,"sources":["components/forgetpassword/Form.js","pages/PasswordForget.js"],"names":["Form","props","history","useHistory","useState","formError","setFormError","dispatchRedux","useDispatch","email","useInput","validate","value","test","formSubmitHandler","e","a","preventDefault","touchAll","validateAll","message","forgetPassword","onSubmit","noValidate","className","Input","label","input","id","type","placeholder","onChange","onBlur","invalid","inputIsInvalid","errorMsg","PasswordForget"],"mappings":"8LAwDeA,EAjDF,SAAAC,GACX,IAAMC,EAAUC,cADI,EAEcC,mBAAS,MAFvB,mBAEbC,EAFa,KAEFC,EAFE,KAGdC,EAAgBC,cAEhBC,EAAQC,YAAS,CACrBC,SAAU,SAAAC,GAAK,MAAI,oCAAoCC,KAAKD,MAGxDE,EAAiB,uCAAG,WAAMC,GAAN,SAAAC,EAAA,yDACxBD,EAAEE,iBACFX,EAAa,MACbY,YAAST,GAEJU,YAAYV,GALO,uBAMtBH,EAAa,CAAEc,QAAS,uCANF,0BAUxBb,EAAcc,YAAe,CAAEZ,SAASP,IAVhB,2CAAH,sDAavB,OACE,uBACEoB,SAAUR,EACVS,YAAU,EACVC,UAAU,6BAHZ,UAIGnB,GAAa,mBAAGmB,UAAU,aAAb,SAA2BnB,EAAUe,UACnD,cAACK,EAAA,EAAD,CACEC,MAAM,gBACNC,MAAO,CACLH,UAAW,cACXI,GAAI,QACJC,KAAM,QACNC,YAAa,kBACblB,MAAOH,EAAMG,MACbmB,SAAUtB,EAAMsB,SAChBC,OAAQvB,EAAMuB,QAEhBC,QAASxB,EAAMyB,eACfC,SAAS,gCAEX,qBAAKX,UAAU,cAAf,SACE,wBAAQA,UAAU,iBAAlB,6BCrCOY,UAXQ,SAAAnC,GACrB,OACE,sBAAMuB,UAAU,OAAhB,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,6BAAd,6BACA,cAAC,EAAD","file":"static/js/6.92f59d19.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { forgetPassword } from \"../../store/auth\";\nimport useInput, { touchAll, validateAll } from \"../../hooks/use-input\";\nimport Input from \"../ui/Input\";\n\nconst Form = props => {\n  const history = useHistory();\n  const [formError, setFormError] = useState(null);\n  const dispatchRedux = useDispatch();\n\n  const email = useInput({\n    validate: value => /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/.test(value),\n  });\n\n  const formSubmitHandler = async e => {\n    e.preventDefault();\n    setFormError(null);\n    touchAll(email);\n\n    if (!validateAll(email)) {\n      setFormError({ message: \"Provide valid details to continue.\" });\n      return;\n    }\n\n    dispatchRedux(forgetPassword({ email }, history));\n  };\n\n  return (\n    <form\n      onSubmit={formSubmitHandler}\n      noValidate\n      className=\"form form--password-forget\">\n      {formError && <p className=\"form-error\">{formError.message}</p>}\n      <Input\n        label=\"Email address\"\n        input={{\n          className: \"form__input\",\n          id: \"email\",\n          type: \"email\",\n          placeholder: \"you@example.com\",\n          value: email.value,\n          onChange: email.onChange,\n          onBlur: email.onBlur,\n        }}\n        invalid={email.inputIsInvalid}\n        errorMsg=\"Provide valid email address\"\n      />\n      <div className=\"form__group\">\n        <button className=\"btn btn--green\">Send Link</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import Form from \"../components/forgetpassword/Form\";\n\nconst PasswordForget = props => {\n  return (\n    <main className=\"main\">\n      <div className=\"login-form\">\n        <h2 className=\"heading-secondary ma-bt-lg\">Forgot password</h2>\n        <Form />\n      </div>\n    </main>\n  );\n};\n\nexport default PasswordForget;\n"],"sourceRoot":""}