{"version":3,"sources":["components/sidenav/SideNavItem.js","components/sidenav/SideNav.js","components/account/Form.js","pages/UserAccount.js"],"names":["SideNavItem","props","className","active","to","link","children","SideNav","match","useRouteMatch","dispatchRedux","useDispatch","history","useHistory","user","useSelector","state","auth","logoutHandler","e","a","preventDefault","logoutUser","path","onClick","Form","useState","formError","setFormError","name","useInput","validate","value","trim","email","test","useEffect","setValue","formSubmitHandler","touchAll","validateAll","message","updateProfile","onSubmit","noValidate","Input","label","input","id","type","placeholder","onChange","onBlur","invalid","inputIsInvalid","errorMsg","UserAccount"],"mappings":"kKAUeA,EARK,SAAAC,GAClB,OACE,oBAAIC,UAAWD,EAAME,OAAS,mBAAqB,GAAnD,SACE,cAAC,IAAD,CAAMC,GAAIH,EAAMI,KAAhB,SAAuBJ,EAAMK,cCsCpBC,IArCC,SAAAN,GACd,IAAMO,EAAQC,cACRC,EAAgBC,cAChBC,EAAUC,cACVC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,QAEvCI,EAAa,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sDACpBD,EAAEE,iBACFX,EAAcY,YAAWV,EAASE,IAFd,2CAAH,sDAKnB,OACE,qBAAKZ,UAAU,kBAAf,SACE,qBAAIA,UAAU,WAAd,UACE,cAAC,EAAD,CAAaG,KAAK,MAAMF,OAAuB,QAAfK,EAAMe,KAAtC,wBAGA,cAAC,EAAD,CACElB,KAAK,UACLF,OAAuB,YAAfK,EAAMe,KAFhB,uBAKA,cAAC,EAAD,CACElB,KAAK,mBACLF,OAAuB,qBAAfK,EAAMe,KAFhB,6BAKA,oBAAIrB,UAAU,mBAAd,SACE,cAAC,IAAD,CAAMsB,QAASN,EAAed,GAAG,IAAjC,6B,sHC2CKqB,EAvEF,SAAAxB,GACX,IAAMa,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,QADzB,EAEcY,mBAAS,MAFvB,mBAEbC,EAFa,KAEFC,EAFE,KAGdlB,EAAgBC,cAEhBkB,EAAOC,YAAS,CAAEC,SAAU,SAAAC,GAAK,MAAqB,KAAjBA,EAAMC,UAC3CC,EAAQJ,YAAS,CACrBC,SAAU,SAAAC,GAAK,MAAI,oCAAoCG,KAAKH,MAG9DI,qBAAU,WACJtB,IACFe,EAAKQ,SAASvB,EAAKe,MACnBK,EAAMG,SAASvB,EAAKoB,UAIrB,IAEH,IAAMI,EAAiB,uCAAG,WAAMnB,GAAN,SAAAC,EAAA,yDACxBD,EAAEE,iBACFO,EAAa,MACbW,YAASV,EAAMK,GAEVM,YAAYX,EAAMK,GALC,uBAMtBN,EAAa,CAAEa,QAAS,uCANF,0BAUxB/B,EAAcgC,YAAc,CAAEb,OAAMK,SAASpB,IAVrB,2CAAH,sDAavB,OACE,uBAAM6B,SAAUL,EAAmBM,YAAU,EAAC1C,UAAU,oBAAxD,UACGyB,GAAa,mBAAGzB,UAAU,aAAb,SAA2ByB,EAAUc,UACnD,cAACI,EAAA,EAAD,CACEC,MAAM,OACNC,MAAO,CACL7C,UAAW,cACX8C,GAAI,OACJC,KAAM,OACNC,YAAa,YACblB,MAAOH,EAAKG,MACZmB,SAAUtB,EAAKsB,SACfC,OAAQvB,EAAKuB,QAEfC,QAASxB,EAAKyB,eACdC,SAAS,qCAEX,cAACV,EAAA,EAAD,CACE3C,UAAU,WACV4C,MAAM,gBACNC,MAAO,CACL7C,UAAW,cACX8C,GAAI,QACJC,KAAM,QACNC,YAAa,kBACblB,MAAOE,EAAMF,MACbmB,SAAUjB,EAAMiB,SAChBC,OAAQlB,EAAMkB,QAEhBC,QAASnB,EAAMoB,eACfC,SAAS,gCAEX,qBAAKrD,UAAU,oBAAf,SACE,wBAAQA,UAAU,4BAAlB,gC,SClDOsD,UAlBK,SAAAvD,GAClB,OACE,sBAAMC,UAAU,OAAhB,SACE,sBAAKA,UAAU,YAAf,UACE,cAACK,EAAA,EAAD,IACA,qBAAKL,UAAU,qBAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,oBAAIA,UAAU,6BAAd,mCAGA,cAAC,EAAD","file":"static/js/4.01330f98.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst SideNavItem = props => {\n  return (\n    <li className={props.active ? \"side-nav--active\" : \"\"}>\n      <Link to={props.link}>{props.children}</Link>\n    </li>\n  );\n};\n\nexport default SideNavItem;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useRouteMatch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { logoutUser } from \"../../store/auth\";\nimport SideNavItem from \"./SideNavItem\";\n\nconst SideNav = props => {\n  const match = useRouteMatch();\n  const dispatchRedux = useDispatch();\n  const history = useHistory();\n  const user = useSelector(state => state.auth.user);\n\n  const logoutHandler = async e => {\n    e.preventDefault();\n    dispatchRedux(logoutUser(history, user));\n  };\n\n  return (\n    <nav className=\"user-view__menu\">\n      <ul className=\"side-nav\">\n        <SideNavItem link=\"/me\" active={match.path === \"/me\" ? true : false}>\n          My profile\n        </SideNavItem>\n        <SideNavItem\n          link=\"/events\"\n          active={match.path === \"/events\" ? true : false}>\n          My events\n        </SideNavItem>\n        <SideNavItem\n          link=\"/change-password\"\n          active={match.path === \"/change-password\" ? true : false}>\n          Change Password\n        </SideNavItem>\n        <li className=\"side-nav--logout\">\n          <Link onClick={logoutHandler} to=\"/\">\n            logout\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default SideNav;\n","import { useEffect, useState } from \"react\";\nimport useInput, { touchAll, validateAll } from \"../../hooks/use-input\";\nimport Input from \"../ui/Input\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile } from \"../../store/auth\";\n\nconst Form = props => {\n  const user = useSelector(state => state.auth.user);\n  const [formError, setFormError] = useState(null);\n  const dispatchRedux = useDispatch();\n\n  const name = useInput({ validate: value => value.trim() !== \"\" });\n  const email = useInput({\n    validate: value => /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/.test(value),\n  });\n\n  useEffect(() => {\n    if (user) {\n      name.setValue(user.name);\n      email.setValue(user.email);\n    }\n\n    // eslint-disable-next-line\n  }, []);\n\n  const formSubmitHandler = async e => {\n    e.preventDefault();\n    setFormError(null);\n    touchAll(name, email);\n\n    if (!validateAll(name, email)) {\n      setFormError({ message: \"Provide valid details to continue.\" });\n      return;\n    }\n\n    dispatchRedux(updateProfile({ name, email }, user));\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler} noValidate className=\"form form--signup\">\n      {formError && <p className=\"form-error\">{formError.message}</p>}\n      <Input\n        label=\"Name\"\n        input={{\n          className: \"form__input\",\n          id: \"name\",\n          type: \"text\",\n          placeholder: \"Your Name\",\n          value: name.value,\n          onChange: name.onChange,\n          onBlur: name.onBlur,\n        }}\n        invalid={name.inputIsInvalid}\n        errorMsg=\"Name must not be an empty string\"\n      />\n      <Input\n        className=\"ma-bt-md\"\n        label=\"Email address\"\n        input={{\n          className: \"form__input\",\n          id: \"email\",\n          type: \"email\",\n          placeholder: \"you@example.com\",\n          value: email.value,\n          onChange: email.onChange,\n          onBlur: email.onBlur,\n        }}\n        invalid={email.inputIsInvalid}\n        errorMsg=\"Provide valid email address\"\n      />\n      <div className=\"form__group right\">\n        <button className=\"btn btn--small btn--green\">Save Details</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import Form from \"../components/account/Form\";\nimport SideNav from \"../components/sidenav/SideNav\";\n\nconst UserAccount = props => {\n  return (\n    <main className=\"main\">\n      <div className=\"user-view\">\n        <SideNav />\n        <div className=\"user-view__content\">\n          <div className=\"user-view__form-container\">\n            <h2 className=\"heading-secondary ma-bt-md\">\n              Your account settings\n            </h2>\n            <Form />\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default UserAccount;\n"],"sourceRoot":""}